package Model;

import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;
import android.graphics.Rect;
import android.graphics.drawable.Drawable;

public class Player {
	private Bitmap bitmap;
	private Rect sourceRect; // the rectangle to be drawn from the animation bitmap
	private int numOfFrames; // number of frames in animation
	private int currentFrame;
	private long frameTicker;
	private int framePeriod; // milliseconds between each frame(1000/fps)
	
	private int spriteWidth;
	private int spriteHeight;
	
	private int x; // the X coordinate of the object (top left of image)
	private int y; // the Y coordinate of the object (top left)
	
	// constructor 
	public Player(Bitmap bitmap, int x, int y, int width, int height, int fps, int frameCount){
		this.bitmap = bitmap;
		this.setX(x);
		this.setY(y);
		currentFrame = 0;
		numOfFrames = frameCount;
		spriteWidth = bitmap.getWidth() / frameCount;
		spriteHeight = bitmap.getHeight();
		sourceRect = new Rect(0,0 ,spriteWidth, spriteHeight);
		framePeriod = 1000/ fps;
		frameTicker = 0l;
		
		
		
	}
	
	public void update(long gameTime){
		if(gameTime > frameTicker + framePeriod) {
			frameTicker = gameTime;
			// increment frame
			currentFrame++;
			if(currentFrame >= numOfFrames){
				currentFrame = 0;
			}
		}
		
		// define the rectangle to cut out sprite
		
		this.sourceRect.left = currentFrame * spriteWidth;
		this.sourceRect.right = this.sourceRect.left + spriteWidth;
		
	}

	public int getX() {
		return x;
	}

	public void setX(int x) {
		this.x = x;
	}

	public int getY() {
		return y;
	}

	public void setY(int y) {
		this.y = y;
	}
	
	// the draw method which draws the corresponding frame
	public void draw(Canvas canvas) {
		// where to draw the sprite
		Rect destRect = new Rect(getX(), getY(), getX() + spriteWidth, getY() + spriteHeight);
		canvas.drawBitmap(bitmap, sourceRect, destRect, null);
		canvas.drawBitmap(bitmap, 20, 150, null);
		Paint paint = new Paint();
		paint.setARGB(50, 0, 255, 0);
		canvas.drawRect(20 + (currentFrame * destRect.width()), 150, 20 + (currentFrame * destRect.width()) + destRect.width(), 150 + destRect.height(),  paint);
	}

	
	
	
}
